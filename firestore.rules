rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Events
    match /events/{eventId} {
      allow read: if true; // Public read access
      allow create: if isSignedIn() && (isAdmin() || resource.data.created_by == request.auth.uid);
      allow update: if isSignedIn() && (isAdmin() || resource.data.created_by == request.auth.uid);
      allow delete: if isSignedIn() && (isAdmin() || resource.data.created_by == request.auth.uid);
    }
    
    // Event registrations
    match /event_registrations/{registrationId} {
      allow read: if isSignedIn() && (
        resource.data.user_id == request.auth.uid || 
        isAdmin() || 
        resource.data.event_creator == request.auth.uid
      );
      allow create: if isSignedIn() && request.resource.data.user_id == request.auth.uid;
      allow update: if isSignedIn() && (
        resource.data.user_id == request.auth.uid || 
        isAdmin() || 
        resource.data.event_creator == request.auth.uid
      );
      allow delete: if isSignedIn() && (
        resource.data.user_id == request.auth.uid || 
        isAdmin()
      );
    }
    
    // Clubs
    match /clubs/{clubId} {
      allow read: if true; // Public read access
      allow create: if isAdmin();
      allow update: if isSignedIn() && (
        isAdmin() || 
        exists(/databases/$(database)/documents/club_members/$(clubId)_$(request.auth.uid)) &&
        get(/databases/$(database)/documents/club_members/$(clubId)_$(request.auth.uid)).data.role == 'admin'
      );
      allow delete: if isAdmin();
    }
    
    // Club members
    match /club_members/{membershipId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && (
        isAdmin() || 
        resource.data.user_id == request.auth.uid ||
        resource.data.role == 'admin'
      );
      allow delete: if isSignedIn() && (
        isAdmin() || 
        resource.data.user_id == request.auth.uid ||
        resource.data.role == 'admin'
      );
    }
    
    // Certificate requests
    match /certificate_requests/{requestId} {
      allow read: if isSignedIn() && (
        resource.data.user_id == request.auth.uid || 
        isAdmin()
      );
      allow create: if isSignedIn() && request.resource.data.user_id == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Certificates
    match /certificates/{certificateId} {
      allow read: if isSignedIn() && (
        resource.data.user_id == request.auth.uid || 
        isAdmin()
      );
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}

